public abstract class org/jetbrains/compose/reload/AbstractComposeHotRun : org/gradle/api/tasks/JavaExec {
	public final fun getCompilation ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/compose/reload/ComposeHotReloadArguments : org/gradle/process/CommandLineArgumentProvider {
	public abstract fun applyTo (Lorg/gradle/process/JavaForkOptions;)V
}

public abstract interface class org/jetbrains/compose/reload/ComposeHotReloadArgumentsBuilder {
	public abstract fun getProject ()Lorg/gradle/api/Project;
	public abstract fun isRecompileContinuous (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setAgentJar (Lorg/gradle/api/file/FileCollection;)V
	public abstract fun setArgFile (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setDevToolsClasspath (Lorg/gradle/api/file/FileCollection;)V
	public abstract fun setDevToolsEnabled (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setDevToolsTransparencyEnabled (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setHotClasspath (Lorg/gradle/api/file/FileCollection;)V
	public abstract fun setIsHeadless (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setPidFile (Lorg/gradle/api/provider/Provider;)V
	public abstract fun setReloadTaskName (Ljava/lang/String;)V
	public abstract fun setReloadTaskName (Lorg/gradle/api/provider/Provider;)V
}

public final class org/jetbrains/compose/reload/ComposeHotReloadArgumentsKt {
	public static final fun composeHotReloadArguments (Lorg/gradle/api/Project;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/compose/reload/ComposeHotReloadArguments;
	public static final fun withComposeHotReloadArguments (Lorg/gradle/api/tasks/JavaExec;Lkotlin/jvm/functions/Function1;)V
	public static final fun withComposeHotReloadArguments (Lorg/gradle/process/JavaForkOptions;Lkotlin/jvm/functions/Function1;)V
}

public class org/jetbrains/compose/reload/ComposeHotReloadExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun getUseJetBrainsRuntime ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/compose/reload/ComposeHotReloadPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public class org/jetbrains/compose/reload/ComposeHotRun : org/jetbrains/compose/reload/AbstractComposeHotRun {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/PropertiesKt {
	public static final fun isHotReloadBuild (Lorg/gradle/api/Project;)Z
}

public final class org/jetbrains/compose/reload/RuntimeClasspathKt {
	public static final fun getHotReloadRuntimeClasspath (Lorg/gradle/api/Project;)Lorg/gradle/api/file/FileCollection;
}

public final class org/jetbrains/compose/reload/SetupComposeHotReloadExecTasksKt$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

